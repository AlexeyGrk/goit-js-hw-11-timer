{"version":3,"sources":["timers.js","index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","timerFace","getElementById","CountdownTimer","selector","targetDate","setInterval","nowDate","Date","now","time","updateClockface","pad","Math","floor","textContent","value","String","padStart","clearInterval","setInt"],"mappings":";;;AAyCA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAzCA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,2BAC7BC,MAAOF,SAASC,cAAc,4BAC9BE,KAAMH,SAASC,cAAc,2BAC7BG,KAAMJ,SAASC,cAAc,2BAC7BI,UAAWL,SAASM,eAAe,YAG/BC,EAAAA,WACkC,SAAA,EAAA,GAAA,IAAA,EAAA,KAAxBC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GAK7BC,EAAAA,KAAAA,SAAAA,YAAY,WACbC,IAAAA,EAAUC,KAAKC,MACfC,EAAO,EAAKL,WAAaE,EAC/B,EAAKI,gBAAgBD,IACpB,MARIN,KAAAA,SAAWA,EACXC,KAAAA,WAAaA,EA8BtB,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,kBArBE,MAAA,SAAgBK,GACRf,IAAAA,EAAO,KAAKiB,IAAIC,KAAKC,MAAMJ,EAAQ,QACnCZ,EAAQ,KAAKc,IAAIC,KAAKC,MAAOJ,EAAQ,MAAyB,OAC9DX,EAAO,KAAKa,IAAIC,KAAKC,MAAOJ,EAAQ,KAAoB,MACxDV,EAAO,KAAKY,IAAIC,KAAKC,MAAOJ,EAAQ,IAAc,MACxDhB,EAAKC,KAAKoB,YAAiBpB,GAAAA,OAAAA,GAC3BD,EAAKI,MAAMiB,YAAiBjB,GAAAA,OAAAA,GAC5BJ,EAAKK,KAAKgB,YAAiBhB,GAAAA,OAAAA,GAC3BL,EAAKM,KAAKe,YAAiBf,GAAAA,OAAAA,KAa/B,CAAA,IAAA,MAVE,MAAA,SAAIgB,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OASrC,CAAA,IAAA,aAPE,MAAA,SAAWR,GACLA,GAAAA,EAAO,EAEDhB,OADRyB,cAAc,KAAKC,QACX1B,EAAKO,UAAUc,YAAc,aAI3C,EAjCMZ,GAiCN,IAAIA,EAAe,CACjBC,SAAU,WACVC,WAAY,IAAIG,KAAK;;AC1CvB,aADA,QAAA,oBACA,QAAA","file":"src.92f06f98.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  days: document.querySelector('span[data-value=\"days\"]'),\n  hours: document.querySelector('span[data-value=\"hours\"]'),\n  mins: document.querySelector('span[data-value=\"mins\"]'),\n  secs: document.querySelector('span[data-value=\"secs\"]'),\n  timerFace: document.getElementById('timer-1'),\n};\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.selector = selector;\n    this.targetDate = targetDate;\n  }\n\n  setInt = setInterval(() => {\n    const nowDate = Date.now();\n    const time = this.targetDate - nowDate;\n    this.updateClockface(time);\n  }, 1000);\n\n  updateClockface(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n    refs.days.textContent = `${days}`;\n    refs.hours.textContent = `${hours}`;\n    refs.mins.textContent = `${mins}`;\n    refs.secs.textContent = `${secs}`;\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n  timeFinish(time) {\n    if (time < 0) {\n      clearInterval(this.setInt);\n      return (refs.timerFace.textContent = 'Finish');\n    }\n  }\n}\nnew CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('May 8, 2021'),\n});\n","import './sass/main.scss';\nimport './timers';\n"]}